diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 0000000000000000000000000000000000000000..a2a797b21364d1ded66fce699dc22c23907b2be7
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,3 @@
+{
+  "editor.formatOnSave": false
+}
diff --git a/dist/resources/helpers/declaration-title.js b/dist/resources/helpers/declaration-title.js
index 0695653c811f67639a504fd56f3cf297545b531d..5d51f4b208fa26568b67fc05eae264b6a519c0ff 100644
--- a/dist/resources/helpers/declaration-title.js
+++ b/dist/resources/helpers/declaration-title.js
@@ -43,9 +43,9 @@ function default_1(theme) {
         }
         md.push(`${this.flags.isRest ? '... ' : ''} **${(0, utils_1.escapeChars)(this.name)}**`);
         if (this instanceof typedoc_1.DeclarationReflection && this.typeParameters) {
-            md.push(`<${this.typeParameters
+            md.push(`\\<${this.typeParameters // Escape `<` because MDX2 parses it as JSX tags
                 .map((typeParameter) => `\`${typeParameter.name}\``)
-                .join(', ')}\\>`);
+                .join(', ')}>`);
         }
         md.push(getType(this));
         if (!(this.type instanceof typedoc_1.LiteralType) &&
diff --git a/dist/resources/helpers/reflection-title.js b/dist/resources/helpers/reflection-title.js
index 5a2601bf1bf9ca5dbe100c73f9a5d7aa2dc922fa..bf1ec29b9163c87b783aa499f54d23ee5fa9a755 100644
--- a/dist/resources/helpers/reflection-title.js
+++ b/dist/resources/helpers/reflection-title.js
@@ -42,7 +42,7 @@ function default_1(theme) {
                 const typeParameters = this.model.typeParameters
                     .map((typeParameter) => typeParameter.name)
                     .join(', ');
-                title.push(`<${typeParameters}${shouldEscape ? '\\>' : '>'}`);
+                title.push(`\\<${typeParameters}>`); // Escape `<` because MDX2 parses it as JSX tag;
             }
         }
         return title.join('');
diff --git a/dist/resources/helpers/signature-title.js b/dist/resources/helpers/signature-title.js
index 42cba7e3b8c47a8b75b88219ee56f33c73e13855..74237708a1e21cb995b72973b6628f2898e77723 100644
--- a/dist/resources/helpers/signature-title.js
+++ b/dist/resources/helpers/signature-title.js
@@ -43,9 +43,9 @@ function default_1(theme) {
             md.push(`**${this.name}**`);
         }
         if (this.typeParameters) {
-            md.push(`<${this.typeParameters
+            md.push(`\\<${this.typeParameters // Escape `<` because MDX2 parses it as JSX tag
                 .map((typeParameter) => `\`${typeParameter.name}\``)
-                .join(', ')}\\>`);
+                .join(', ')}>`);
         }
         md.push(`(${getParameters(this.parameters)})`);
         if (this.type && !((_b = this.parent) === null || _b === void 0 ? void 0 : _b.kindOf(typedoc_1.ReflectionKind.Constructor))) {
diff --git a/dist/resources/helpers/type.js b/dist/resources/helpers/type.js
index 26543f2ea14b8e5d46238226ae2b9c6053327c0a..a09325f03674d554f3a9de8a2a351d0546da1280 100644
--- a/dist/resources/helpers/type.js
+++ b/dist/resources/helpers/type.js
@@ -113,7 +113,8 @@ function getDeclarationType(model) {
                     ? `= ${(0, utils_1.escapeChars)(obj.defaultValue)}`
                     : ''}`;
             });
-        return `{ ${indexSignature ? indexSignature : ''}${types ? types.join('; ') : ''} }${model.defaultValue && model.defaultValue !== '...'
+        // Escape `{` because MDX2 parses it as JS expression
+        return `\\{ ${indexSignature ? indexSignature : ''}${types ? types.join('; ') : ''}}${model.defaultValue && model.defaultValue !== '...'
             ? `= ${(0, utils_1.escapeChars)(model.defaultValue)}`
             : ''}`;
     }
@@ -122,9 +123,9 @@ function getDeclarationType(model) {
 function getFunctionType(modelSignatures) {
     const functions = modelSignatures.map((fn) => {
         const typeParams = fn.typeParameters
-            ? `<${fn.typeParameters
+            ? `\\<${fn.typeParameters // Escape `<` because MDX2 parses it as JSX tag
                 .map((typeParameter) => typeParameter.name)
-                .join(', ')}\\>`
+                .join(', ')}>`
             : [];
         const params = fn.parameters
             ? fn.parameters.map((param) => {
@@ -150,9 +151,9 @@ function getReferenceType(model, emphasis) {
                 : `\`${model.name}\``);
         }
         if (model.typeArguments && model.typeArguments.length > 0) {
-            reflection.push(`<${model.typeArguments
+            reflection.push(`\\<${model.typeArguments // Escape `<` because MDX2 parses it as JSX tag
                 .map((typeArgument) => Handlebars.helpers.type.call(typeArgument))
-                .join(', ')}\\>`);
+                .join(', ')}>`);
         }
         return reflection.join('');
     }
diff --git a/dist/utils.js b/dist/utils.js
index b9c09e3fbe6e6536c1600afee4ad363631cce02b..9836f0c033f0b2d30974e63e8174113c8484a416 100644
--- a/dist/utils.js
+++ b/dist/utils.js
@@ -11,7 +11,8 @@ function formatContents(contents) {
 exports.formatContents = formatContents;
 function escapeChars(str) {
     return str
-        .replace(/>/g, '\\>')
+        .replace(/</g, '\\<') // Escape `<` because MDX2 parses it as JSX tag
+        .replace(/{/g, '\\{') // Escape `{` because MDX2 parses it as JS expression
         .replace(/_/g, '\\_')
         .replace(/`/g, '\\`')
         .replace(/\|/g, '\\|');
