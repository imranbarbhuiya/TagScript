name: Continuous Delivery

on:
    workflow_dispatch:
        inputs:
            prNumber:
                description: The number of the PR that is being deployed
                required: true
            ref:
                description: The branch that is being deployed. Should be a branch on the given repository
                required: false
                default: main
            repository:
                description: The {owner}/{repository} that is being deployed.
                required: false
                default: imranbarbhuiya/tagscript
    push:
        branches:
            - main

jobs:
    Publish:
        name: Publish Next to npm
        permissions:
            id-token: write
        runs-on: ubuntu-latest
        if: github.repository_owner == 'imranbarbhuiya'
        steps:
            - name: Checkout Project
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
              with:
                  fetch-depth: 0
                  repository: ${{ github.event.inputs.repository || 'imranbarbhuiya/tagscript' }}
                  ref: ${{ github.event.inputs.ref || 'main' }}
            - name: Add TypeScript problem matcher
              run: echo "::add-matcher::.github/problemMatchers/tsc.json"
            - name: Use Node.js v20
              uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
              with:
                  node-version: 20
                  cache: yarn
                  registry-url: https://registry.yarnpkg.com/
            - name: Install Dependencies
              uses: ./scripts/yarnCache
            - name: Build all packages
              run: yarn build --filter="./packages/*"
            - name: Bump Versions & Publish
              run: |
                  # Resolve the tag to be used. "next" for push events, "pr-{prNumber}" for dispatch events.
                  TAG=$([[ ${{ github.event_name }} == 'push' ]] && echo 'next' || echo 'pr-${{ github.event.inputs.prNumber }}')
                  yarn config set npmAuthToken ${NODE_AUTH_TOKEN}
                  yarn config set npmPublishRegistry "https://registry.yarnpkg.com"
                  for d in packages/*; do
                    pushd $d
                    yarn bump --preid "${TAG}.$(git rev-parse --verify --short HEAD)" --skip-changelog
                    yarn npm publish --tag ${TAG}
                    popd
                  done
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_CONFIG_PROVENANCE: true
